<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.drfeel.ssm.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="net.drfeel.ssm.entity.Employee">
        <id column="empno" jdbcType="INTEGER" property="empno"/>
        <result column="ename" jdbcType="VARCHAR" property="ename"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="deptno" jdbcType="INTEGER" property="deptno"/>
    </resultMap>
    <resultMap id="WithDeptResultMap" type="net.drfeel.ssm.entity.Employee">
        <id column="empno" jdbcType="INTEGER" property="empno"/>
        <result column="ename" jdbcType="VARCHAR" property="ename"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="deptno" jdbcType="INTEGER" property="deptno"/>

        <association property="department" javaType="net.drfeel.ssm.entity.Department">
            <id column="deptno" property="deptno"></id>
            <result column="dname" property="dname"></result>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        empno, ename, gender, email, deptno
    </sql>

    <sql id="WithDept_Column_List">
        e.empno, e.ename, e.gender, e.email, e.deptno, d.deptno, d.dname
    </sql>


    <!-- 查询员工同时带部门信息 -->
    <select id="selectByExampleWithDept" parameterType="net.drfeel.ssm.entity.EmployeeExample" resultMap="WithDeptResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithDept_Column_List" />
        FROM emp e
        left join dept d on e.deptno = d.deptno
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithDept" parameterType="java.lang.Integer" resultMap="WithDeptResultMap">
        select
        <include refid="WithDept_Column_List" />
        FROM emp e
        left join dept d on e.deptno = d.deptno
        where empno = #{empno,jdbcType=INTEGER}
    </select>

    <select id="selectByExample" parameterType="net.drfeel.ssm.entity.EmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emp
        where empno = #{empno,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where empno = #{empno,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="net.drfeel.ssm.entity.EmployeeExample">
        delete from emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.drfeel.ssm.entity.Employee">
    insert into emp (empno, ename, gender, 
      email, deptno)
    values (#{empno,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{deptno,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="net.drfeel.ssm.entity.Employee">
        insert into emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empno != null">
                empno,
            </if>
            <if test="ename != null">
                ename,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="deptno != null">
                deptno,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empno != null">
                #{empno,jdbcType=INTEGER},
            </if>
            <if test="ename != null">
                #{ename,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptno != null">
                #{deptno,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.drfeel.ssm.entity.EmployeeExample" resultType="java.lang.Long">
        select count(*) from emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update emp
        <set>
            <if test="record.empno != null">
                empno = #{record.empno,jdbcType=INTEGER},
            </if>
            <if test="record.ename != null">
                ename = #{record.ename,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.deptno != null">
                deptno = #{record.deptno,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update emp
        set empno = #{record.empno,jdbcType=INTEGER},
        ename = #{record.ename,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        deptno = #{record.deptno,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.drfeel.ssm.entity.Employee">
        update emp
        <set>
            <if test="ename != null">
                ename = #{ename,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptno != null">
                deptno = #{deptno,jdbcType=INTEGER},
            </if>
        </set>
        where empno = #{empno,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.drfeel.ssm.entity.Employee">
    update emp
    set ename = #{ename,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      deptno = #{deptno,jdbcType=INTEGER}
    where empno = #{empno,jdbcType=INTEGER}
  </update>
</mapper>